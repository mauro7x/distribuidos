#!/bin/bash

# Exit on any errors
set -e

# Config
dirs=("TP0" "TP1")
cmds=(
    "cargo check,cargo check --color always"
    "cargo clippy,cargo clippy --color always -- -D warnings"
    "cargo fmt,cargo fmt --check"
)

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
GREY='\033[1;30m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
CYANB='\033[1;36m'
NC='\033[0m'
FC=${CYAN}

# Special chars
CHECK="${GREEN}\xE2\x9C\x93${NC}"

# Functions

# Args:
# $1 = command name
# $2 = command to run
function run_cmd {
    echo -n -e "> Running ${CYAN}$1${NC}... "

    set +e
    OUTPUT=$($2 2>&1)
    RESULT=$?
    set -e

    if [ $RESULT -eq 0 ]; then
        echo -e "${CHECK}"
    else
        echo -e "${RED}failed. See output:${NC}\n"
        echo -e "$OUTPUT"
        exit 1
    fi
}

# Args:
# $1 = relative path to directory where checks should be run
function run_for_dir {
    cd $1

    echo -n -e "Checking $1..."

    if [ -z "$(git status --porcelain .)" ]; then
        echo -e " ${GREY}no changes.${NC}"
        cd ..
        return 0
    fi

    echo -e " ${YELLOW}changes detected.${NC}"

    for cmd in "${cmds[@]}"; do
        IFS=, read name cmd <<< "$cmd"
        run_cmd "$name" "$cmd"
    done

    cd ..
}

# Main execution

echo -e "${FC}=============================${NC}"
echo -e "${FC}=${NC}      ${CYANB}Pre-commit hook${NC}      ${FC}=${NC}"
echo -e "${FC}=${NC}   Sistemas Distribuidos   ${FC}=${NC}"
echo -e "${FC}=============================${NC}\n"

for dir in "${dirs[@]}"; do
    run_for_dir "$dir"
done

echo ""